# ===============LICENSE_START=======================================================
# Acumos Apache-2.0
# ===================================================================================
# Copyright (C) 2017-2018 AT&T Intellectual Property & Tech Mahindra. All rights reserved.
# ===================================================================================
# This Acumos software file is distributed by AT&T and Tech Mahindra
# under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# This file is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ===============LICENSE_END=========================================================
input {


jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION_DOWNLOAD"
       type => "solution_downloaded"
       tags => ["database"]
      }
jdbc {
	    jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_USER"
       type => "no_of_user"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION_DEPLOYMENT"
       type => "solution_deployed"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION"
       type => "all_solution"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION_REV"
       type => "revision_solution"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION s inner join C_SOLUTION_REV r ON s.SOLUTION_ID = r.SOLUTION_ID AND r.ACCESS_TYPE_CD='OR' and s.ACTIVE_YN ='Y'"
       type => "company_model"
       tags => ["database"]	   
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION s inner join C_SOLUTION_REV r ON s.SOLUTION_ID = r.SOLUTION_ID AND r.ACCESS_TYPE_CD='PB' and s.ACTIVE_YN ='Y'"
       type => "public_model"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "SELECT * FROM C_SOLUTION s inner join C_SOLUTION_REV r ON s.SOLUTION_ID = r.SOLUTION_ID AND r.ACCESS_TYPE_CD='PR' and s.ACTIVE_YN ='Y'"
       type => "private_model"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "select s.SOLUTION_ID, s.NAME Model_Name, u.First_Name, u.Last_Name, r.ACCESS_TYPE_CD, s.Created_Date, s.Modified_date, s.ACTIVE_YN from C_SOLUTION s, C_USER u, C_SOLUTION_REV r where s.USER_ID = u.USER_ID and s.SOLUTION_ID = r.SOLUTION_ID order by u.Last_Name"
       type => "solutions"
       tags => ["database"]
      }
jdbc {
	   jdbc_driver_library => "${ACUMOS_ELK_JDBC_DRIVER_LIBRARY}"
       jdbc_driver_class => "${ACUMOS_ELK_JDBC_DRIVER_CLASS}"
	   jdbc_connection_string => "${ACUMOS_ELK_JDBC_CONNECTION_STRING}"
       jdbc_user => "${ACUMOS_ELK_JDBC_USERNAME}"
       jdbc_password => "${ACUMOS_ELK_JDBC_PASSWORD}"
       jdbc_validate_connection => true
	   schedule => "* * * * *"
       statement => "select solution.name,CONCAT(user.first_name,' ',user.last_name) from c_solution solution inner join c_user user on user.USER_ID = solution.USER_ID"
       type => "name_model"
       tags => ["database"]
      }





  beats {
        port => 5000
        codec => multiline {
                 pattern => "^%{TIMESTAMP_ISO8601}"
                 negate => true
                 what => "previous"
                 }			 
  }
}
filter {  

    if ([source] =~ /audit.log$/){
       grok {
          match => { "message" => "%{DATA:LogTimestamp}\|%{DATA:EntryTimestamp}\|%{DATA:InvokeTimestamp}\|%{DATA:RequestID}\|%{DATA:InvocationID}\|%{DATA:InstanceUUID}\|%{DATA:ServiceInstanceID}\|%{DATA:Thread}\|%{DATA:ServiceName}\|%{DATA:PartnerName}\|%{DATA:StatusCode}\|%{DATA:ResponseCode}\|%{DATA:ResponseDescription}\|%{DATA:level}\|%{DATA:Severity}\|%{DATA:ServerIPAddress}\|%{DATA:ElapsedTime}\|%{DATA:ServerFQDN}\|%{DATA:ClientIPAddress}\|%{DATA:VirtualServerName}\|%{DATA:ContextName}\|%{DATA:TargetEntity}\|%{DATA:TargetServiceName}\|%{DATA:TargetElement}\|%{DATA:User}\|%{DATA:p_logger}\|%{DATA:p_mdc}\|%{DATA:p_message}\|%{DATA:p_marker}" }
       }
    } else if ([source] =~ /debug.log$/){
       grok {
          match => { "message" => "%{DATA:LogTimestamp}\|%{DATA:EntryTimestamp}\|%{DATA:InvokeTimestamp}\|%{DATA:RequestID}\|%{DATA:InvocationID}\|%{DATA:InstanceUUID}\|%{DATA:ServiceInstanceID}\|%{DATA:Thread}\|%{DATA:ServiceName}\|%{DATA:PartnerName}\|%{DATA:StatusCode}\|%{DATA:ResponseCode}\|%{DATA:ResponseDescription}\|%{DATA:level}\|%{DATA:Severity}\|%{DATA:ServerIPAddress}\|%{DATA:ElapsedTime}\|%{DATA:ServerFQDN}\|%{DATA:ClientIPAddress}\|%{DATA:VirtualServerName}\|%{DATA:ContextName}\|%{DATA:TargetEntity}\|%{DATA:TargetServiceName}\|%{DATA:TargetElement}\|%{DATA:User}\|%{DATA:p_logger}\|%{DATA:p_mdc}\|%{DATA:p_message}\|%{DATA:p_marker}" }
       }
    } else if ([source] =~ /error.log$/){
         grok {
            match => { "message" => "%{DATA:LogTimestamp}\|%{DATA:EntryTimestamp}\|%{DATA:InvokeTimestamp}\|%{DATA:RequestID}\|%{DATA:InvocationID}\|%{DATA:InstanceUUID}\|%{DATA:ServiceInstanceID}\|%{DATA:Thread}\|%{DATA:ServiceName}\|%{DATA:PartnerName}\|%{DATA:StatusCode}\|%{DATA:ResponseCode}\|%{DATA:ResponseDescription}\|%{DATA:level}\|%{DATA:Severity}\|%{DATA:ServerIPAddress}\|%{DATA:ElapsedTime}\|%{DATA:ServerFQDN}\|%{DATA:ClientIPAddress}\|%{DATA:VirtualServerName}\|%{DATA:ContextName}\|%{DATA:TargetEntity}\|%{DATA:TargetServiceName}\|%{DATA:TargetElement}\|%{DATA:User}\|%{DATA:p_logger}\|%{DATA:p_mdc}\|%{DATA:p_message}\|(?<p_marker>(.|\r|\n)*)" }
         }
    } else if ([source] =~ /metrics.log$/){
         grok {
            match => { "message" => "%{DATA:LogTimestamp}\|%{DATA:EntryTimestamp}\|%{DATA:InvokeTimestamp}\|%{DATA:RequestID}\|%{DATA:InvocationID}\|%{DATA:InstanceUUID}\|%{DATA:ServiceInstanceID}\|%{DATA:Thread}\|%{DATA:ServiceName}\|%{DATA:PartnerName}\|%{DATA:StatusCode}\|%{DATA:ResponseCode}\|%{DATA:ResponseDescription}\|%{DATA:level}\|%{DATA:Severity}\|%{DATA:ServerIPAddress}\|%{DATA:ElapsedTime}\|%{DATA:ServerFQDN}\|%{DATA:ClientIPAddress}\|%{DATA:VirtualServerName}\|%{DATA:ContextName}\|%{DATA:TargetEntity}\|%{DATA:TargetServiceName}\|%{DATA:TargetElement}\|%{DATA:User}\|%{DATA:p_logger}\|%{DATA:p_mdc}\|%{DATA:p_message}\|(?<p_marker>(.|\r|\n)*)" }
         }
    } else {
         grok {
            match => { "message" => "(?<unstructuredlog>(.|\r|\n)*)" }
         }
    }

}


output {
       stdout { codec => json_lines }
       if "database" in [tags]{
       elasticsearch {
       hosts => ["elasticsearch:9200"]
       index => "testdb"
       document_type => "%{type}"
       }
      }
    else {
     elasticsearch {
       hosts => ["elasticsearch:9200"]
       index => "logstash"
           }
      }
}
